version: 2.1
obrs:
  aws-cli: circleci/aws-cli@5
  aws-ecr: circleci/aws-ecr@9
  docker: circleci/docker@2.6.0

jobs:
  # Build job
  build:
    resource_class: medium
    docker:
      - image: cimg/openjdk:11.0
    environment:
      _JAVA_OPTIONS: "-Xms512m -Xmx1g"
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
      - run:
          command: ./gradlew --no-daemon clean javadoc
      - run:
          command: ./gradlew --max-workers=1 --no-daemon analyze
      - run:
          no_output_timeout: 15m
          command: ./gradlew --no-daemon -PmaxParallelForks=1 build
      - save_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          command: mkdir ~/test-results
      - run:
          command: find ~/workspace -type f -regex ".*/test-results/.*xml" -exec ln {} ~/test-results/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results
      - store_artifacts:
          path: build/libs

  # Integration Test job
  integration-test:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/workspace
    steps:
      - checkout
      - run:
          command: ./gradlew --no-daemon test
      - store_test_results:
          path: ~/workspace/build/test-results

  # Publish job (Docker image push to ECR)
  publish:
    docker:
      - image: cimg/openjdk:11.0
    environment:
      ECR_REPOSITORY: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/infra-cruise-control
    working_directory: ~/workspace
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          role_arn: arn:aws:iam::717232957798:role/ci-main
          profile_name: OIDC-USER
      - aws-ecr/ecr_login:
          profile_name: OIDC-USER
          region: $AWS_REGION
      - run:
          name: Build Docker Image
          command: |
            docker build -t $ECR_REPOSITORY:$CIRCLE_SHA1 .
      - run:
          name: Push Docker Image to ECR
          command: |
            AWS_PROFILE=OIDC-USER docker push $ECR_REPOSITORY:$CIRCLE_SHA1

workflows:
  build-and-publish:
    jobs:
      - build
      - integration-test:
          requires:
            - build
          filters:
            branches:
              only: main  # Runs integration tests only on the `main` branch.
      - publish:
          context:
            - aws_empty
          requires:
            - integration-test
          filters:
            branches:
              only: main  # Pushes to the registry only from the `main` branch.
