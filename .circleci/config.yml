version: 2.1

jobs:

  test-multi-arch:
    parameters:
      platform:
        type: string
    environment:
      _JAVA_OPTIONS: "-Xms512m -Xmx1g"
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    working_directory: ~/workspace
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run: |
         # install required qemu libraries
         docker run --rm --privileged tonistiigi/binfmt:latest --install all
         # run docker container with qemu emulation
         docker run --rm \
           --platform << parameters.platform >> \
           --name qemu-cross-<< parameters.platform >> \
           --mount type=bind,source=${PWD},target=/github_workspace \
           --workdir /github_workspace \
           << parameters.platform >>/eclipse-temurin:11-jdk-focal uname -a; ./gradlew --no-daemon -PmaxParallelForks=1 build
      - run:
          command: mkdir ~/test-results
      - run:
          command: find ~/workspace -type f -regex ".*/test-results/.*xml" -exec ln {} ~/test-results/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results

  build:
    environment:
      _JAVA_OPTIONS: "-Xms512m -Xmx1g"
    working_directory: ~/workspace
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
      - run:
          command: ./gradlew --no-daemon clean javadoc
      - run:
          # run static analysis tasks standalone to avoid OOME in CircleCI
          command: ./gradlew --max-workers=1 --no-daemon analyze
      - run:
          no_output_timeout: 15m
          command: ./gradlew --no-daemon -PmaxParallelForks=1 build
      - save_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          command: mkdir ~/test-results
      - run:
          command: find ~/workspace -type f -regex ".*/test-results/.*xml" -exec ln {} ~/test-results/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results
      - store_artifacts:
          path: build/libs

  integration-test:
    environment:
      _JAVA_OPTIONS: "-Xms512m -Xmx1g"
    working_directory: ~/workspace
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
      - run:
          command: ./gradlew --no-daemon -PmaxParallelForks=1 clean integrationTest
      - save_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          command: mkdir ~/test-results
      - run:
          command: find ~/workspace -type f -regex ".*/test-results/.*xml" -exec ln {} ~/test-results/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results

  publish:
    working_directory: ~/workspace
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle" }}
      - run:
          command: ./gradlew :artifactoryPublish :cruise-control:artifactoryPublish :cruise-control-core:artifactoryPublish :cruise-control-metrics-reporter:artifactoryPublish

workflows:
  version: 2.1
  build-and-publish:
    jobs:
      - test-multi-arch:
          matrix:
            parameters:
              platform: ["s390x"]
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
      - integration-test:
          requires:
            - build
            - test-multi-arch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+(?:-[a-zA-Z0-9_]+)?$/
      - publish:
          requires:
            - integration-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+(?:-[a-zA-Z0-9_]+)?$/
